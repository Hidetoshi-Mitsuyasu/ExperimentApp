apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.example.hmitsuyasu.myapplication"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    // デバッグ用 apk とリリース用 apk の署名の設定
    signingConfigs {
        apply from: '../signingConfigDebug.gradle', to: android
        def releaseSettingGradleFile = file('../signingConfigRelease.gradle')
        if (releaseSettingGradleFile.exists()) {
            apply from: releaseSettingGradleFile, to: android
        } else {
            release {}
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    dataBinding {
        enabled = true
    }

    packagingOptions {
        exclude 'META-INF/proguard/coroutines.pro'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android X
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.0.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutine"
    implementation 'com.google.code.gson:gson:2.8.5'

    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'junit:junit:4.12'

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"

    implementation "org.koin:koin-android:$rootProject.koinVersion"
    implementation "org.koin:koin-android-scope:$rootProject.koinVersion"
    implementation "org.koin:koin-android-viewmodel:$rootProject.koinVersion"
    implementation "org.koin:koin-android-ext:$rootProject.koinVersion"
    testImplementation "org.koin:koin-test:$rootProject.koinVersion"


    debugImplementation("androidx.fragment:fragment-testing:$fragmentVersion") {
        exclude group: 'androidx.test', module: 'core'
    }
    apply from: './jacoco.gradle'
}
